// Place your key bindings in this file to override the defaults
[
    {
        "command": "workbench.action.toggleAuxiliaryBar",
        "key": "ctrl+]"
    },
    {
        "command": "-workbench.action.toggleAuxiliaryBar",
        "key": "ctrl+]"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+["
    },
    {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+["
    },
    {
        "command": "workbench.action.tasks.build",
        "key": "ctrl+alt+b",
        "when": "taskCommandsRegistered"
    },
    {
        "command": "-workbench.action.tasks.build",
        "key": "ctrl+shift+b",
        "when": "taskCommandsRegistered"
    },
    {
        "command": "-workbench.action.closeFolder",
        "key": "ctrl+p f",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "command": "workbench.action.toggleMaximizedPanel",
        "key": "ctrl+p t",
        "when": "panelAlignment == 'center' || panelPosition != 'bottom'"
    },
    {
        "command": "markdown.showLockedPreviewToSide",
        "key": "ctrl+shift+v"
    },
    {
        "command": "-markdown.showPreview",
        "key": "ctrl+shift+v",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "command": "editor.action.addCommentLine",
        "key": "ctrl+p ctrl+c",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.formatSelection",
        "key": "ctrl+p ctrl+f",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.moveSelectionToNextFindMatch",
        "key": "ctrl+p ctrl+d",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.nextCommentingRange",
        "key": "ctrl+p ctrl+alt+down",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "command": "editor.action.previousCommentingRange",
        "key": "ctrl+p ctrl+alt+up",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "command": "editor.action.removeCommentLine",
        "key": "ctrl+p ctrl+u",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.revealDefinitionAside",
        "key": "ctrl+p f12",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "command": "editor.action.revealDefinitionAside",
        "key": "ctrl+p ctrl+f12",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "command": "editor.action.selectFromAnchorToCursor",
        "key": "ctrl+p ctrl+k",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "command": "editor.action.setSelectionAnchor",
        "key": "ctrl+p ctrl+b",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.showHover",
        "key": "ctrl+p ctrl+i",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.trimTrailingWhitespace",
        "key": "ctrl+p ctrl+x",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.createFoldingRangeFromSelection",
        "key": "ctrl+p ctrl+,",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.debug.action.showDebugHover",
        "key": "ctrl+p ctrl+i",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "command": "editor.foldAll",
        "key": "ctrl+p ctrl+0",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldAllBlockComments",
        "key": "ctrl+p ctrl+/",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldAllExcept",
        "key": "ctrl+p ctrl+-",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldAllMarkerRegions",
        "key": "ctrl+p ctrl+8",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel1",
        "key": "ctrl+p ctrl+1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel2",
        "key": "ctrl+p ctrl+2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel3",
        "key": "ctrl+p ctrl+3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel4",
        "key": "ctrl+p ctrl+4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel5",
        "key": "ctrl+p ctrl+5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel6",
        "key": "ctrl+p ctrl+6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldLevel7",
        "key": "ctrl+p ctrl+7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldRecursively",
        "key": "ctrl+p ctrl+[",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.removeManualFoldingRanges",
        "key": "ctrl+p ctrl+.",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.toggleFold",
        "key": "ctrl+p ctrl+l",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.toggleFoldRecursively",
        "key": "ctrl+p ctrl+shift+l",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfoldAll",
        "key": "ctrl+p ctrl+j",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfoldAllExcept",
        "key": "ctrl+p ctrl+=",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfoldAllMarkerRegions",
        "key": "ctrl+p ctrl+9",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfoldRecursively",
        "key": "ctrl+p ctrl+]",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "togglePeekWidgetFocus",
        "key": "ctrl+p f2",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "command": "workbench.action.addComment",
        "key": "ctrl+p ctrl+alt+c"
    },
    {
        "command": "copyRelativeFilePath",
        "key": "ctrl+p ctrl+shift+c",
        "when": "!editorFocus"
    },
    {
        "command": "copyRelativeFilePath",
        "key": "ctrl+p ctrl+shift+c",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.defineKeybinding",
        "key": "ctrl+p ctrl+p",
        "when": "resource == 'vscode-userdata:/c%3A/Users/mmard/AppData/Roaming/Code/User/keybindings.json'"
    },
    {
        "command": "inlineChat.start",
        "key": "ctrl+p i",
        "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
    },
    {
        "command": "keybindings.editor.addKeybinding",
        "key": "ctrl+p ctrl+a",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "command": "keybindings.editor.defineWhenExpression",
        "key": "ctrl+p ctrl+e",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "command": "list.showHover",
        "key": "ctrl+p ctrl+i",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "command": "notebook.cell.chat.start",
        "key": "ctrl+p i",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "command": "notebook.cell.collapseCellInput",
        "key": "ctrl+p ctrl+c",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "command": "notebook.cell.collapseCellOutput",
        "key": "ctrl+p t",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "command": "notebook.cell.expandCellInput",
        "key": "ctrl+p ctrl+c",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "command": "notebook.cell.expandCellOutput",
        "key": "ctrl+p t",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "command": "notebook.cell.split",
        "key": "ctrl+p ctrl+shift+\\",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "command": "notebook.cell.toggleOutputScrolling",
        "key": "ctrl+p y",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
    },
    {
        "command": "notifications.showList",
        "key": "ctrl+p ctrl+shift+n"
    },
    {
        "command": "saveAll",
        "key": "ctrl+p s"
    },
    {
        "command": "workbench.action.closeAllEditors",
        "key": "ctrl+p ctrl+w"
    },
    {
        "command": "workbench.action.closeAllGroups",
        "key": "ctrl+p ctrl+shift+w"
    },
    {
        "command": "workbench.action.closeEditorsInGroup",
        "key": "ctrl+p w"
    },
    {
        "command": "workbench.action.closeFolder",
        "key": "ctrl+p f",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "command": "workbench.action.closeUnmodifiedEditors",
        "key": "ctrl+p u"
    },
    {
        "command": "workbench.action.compareEditor.openSide",
        "key": "ctrl+p shift+o",
        "when": "inDiffEditor"
    },
    {
        "command": "workbench.action.copyEditorToNewWindow",
        "key": "ctrl+p o",
        "when": "activeEditor"
    },
    {
        "command": "workbench.action.editor.changeLanguageMode",
        "key": "ctrl+p m",
        "when": "!notebookEditorFocused"
    },
    {
        "command": "workbench.action.files.copyPathOfActiveFile",
        "key": "ctrl+p p"
    },
    {
        "command": "workbench.action.files.openFolder",
        "key": "ctrl+p ctrl+o",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "command": "workbench.action.files.openLocalFolder",
        "key": "ctrl+p ctrl+o",
        "when": "remoteFileDialogVisible"
    },
    {
        "command": "workbench.action.files.revealActiveFileInWindows",
        "key": "ctrl+p r"
    },
    {
        "command": "workbench.action.files.saveWithoutFormatting",
        "key": "ctrl+p ctrl+shift+s"
    },
    {
        "command": "workbench.action.focusAboveGroup",
        "key": "ctrl+p ctrl+up"
    },
    {
        "command": "workbench.action.focusBelowGroup",
        "key": "ctrl+p ctrl+down"
    },
    {
        "command": "workbench.action.focusLeftGroup",
        "key": "ctrl+p ctrl+left"
    },
    {
        "command": "workbench.action.focusRightGroup",
        "key": "ctrl+p ctrl+right"
    },
    {
        "command": "workbench.action.joinEditorInGroup",
        "key": "ctrl+p ctrl+shift+\\",
        "when": "sideBySideEditorActive"
    },
    {
        "command": "workbench.action.keepEditor",
        "key": "ctrl+p enter"
    },
    {
        "command": "workbench.action.keybindingsReference",
        "key": "ctrl+p ctrl+r"
    },
    {
        "command": "workbench.action.moveActiveEditorGroupDown",
        "key": "ctrl+p down"
    },
    {
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "key": "ctrl+p left"
    },
    {
        "command": "workbench.action.moveActiveEditorGroupRight",
        "key": "ctrl+p right"
    },
    {
        "command": "workbench.action.moveActiveEditorGroupUp",
        "key": "ctrl+p up"
    },
    {
        "command": "workbench.action.navigateToLastEditLocation",
        "key": "ctrl+p ctrl+q"
    },
    {
        "command": "workbench.action.nextEditorInGroup",
        "key": "ctrl+p ctrl+pagedown"
    },
    {
        "command": "workbench.action.openGlobalKeybindings",
        "key": "ctrl+p ctrl+s"
    },
    {
        "command": "workbench.action.pinEditor",
        "key": "ctrl+p shift+enter",
        "when": "!activeEditorIsPinned"
    },
    {
        "command": "workbench.action.previousEditorInGroup",
        "key": "ctrl+p ctrl+pageup"
    },
    {
        "command": "workbench.action.selectTheme",
        "key": "ctrl+p ctrl+t"
    },
    {
        "command": "workbench.action.showAllEditors",
        "key": "ctrl+p ctrl+p"
    },
    {
        "command": "workbench.action.splitEditorDown",
        "key": "ctrl+p ctrl+\\"
    },
    {
        "command": "workbench.action.splitEditorInGroup",
        "key": "ctrl+p ctrl+shift+\\",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "command": "workbench.action.splitEditorLeft",
        "key": "ctrl+p ctrl+\\"
    },
    {
        "command": "workbench.action.splitEditorOrthogonal",
        "key": "ctrl+p ctrl+\\"
    },
    {
        "command": "workbench.action.splitEditorRight",
        "key": "ctrl+p ctrl+\\"
    },
    {
        "command": "workbench.action.splitEditorUp",
        "key": "ctrl+p ctrl+\\"
    },
    {
        "command": "workbench.action.terminal.focusHover",
        "key": "ctrl+p ctrl+i",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "key": "ctrl+p ctrl+m",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "command": "workbench.action.toggleZenMode",
        "key": "ctrl+p z",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "command": "workbench.action.unpinEditor",
        "key": "ctrl+p shift+enter",
        "when": "activeEditorIsPinned"
    },
    {
        "command": "workbench.files.action.compareWithClipboard",
        "key": "ctrl+p c"
    },
    {
        "command": "workbench.files.action.compareWithSaved",
        "key": "ctrl+p d"
    },
    {
        "command": "workbench.files.action.focusOpenEditorsView",
        "key": "ctrl+p e",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "command": "views.moveViewDown",
        "key": "ctrl+p down",
        "when": "focusedView != ''"
    },
    {
        "command": "views.moveViewLeft",
        "key": "ctrl+p left",
        "when": "focusedView != ''"
    },
    {
        "command": "views.moveViewRight",
        "key": "ctrl+p right",
        "when": "focusedView != ''"
    },
    {
        "command": "views.moveViewUp",
        "key": "ctrl+p up",
        "when": "focusedView != ''"
    },
    {
        "command": "git.stageSelectedRanges",
        "key": "ctrl+p ctrl+alt+s",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "command": "git.unstageSelectedRanges",
        "key": "ctrl+p ctrl+n",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "command": "markdown.showPreviewToSide",
        "key": "ctrl+p v",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "command": "git.revertSelectedRanges",
        "key": "ctrl+p ctrl+r",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "command": "workspaceExplorer.openWorkspaceInSameWindowQuickPick",
        "key": "ctrl+p w"
    },
    {
        "command": "workspaceExplorer.openWorkspaceInNewWindowQuickPick",
        "key": "ctrl+p ctrl+w"
    },
    {
        "command": "markdown.extension.closePreview",
        "key": "ctrl+p v",
        "when": "activeWebviewPanelId == 'markdown.preview'"
    },
    {
        "command": "workbench.action.showCommands",
        "key": "ctrl+k"
    },
    {
        "command": "workbench.action.quickOpen",
        "key": "ctrl+p o"
    },
    {
        "command": "workbench.action.terminal.toggleTerminal",
        "key": "ctrl+p c",
        "when": "terminal.active"
    }
]
